<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <Authors>Michael Monsour</Authors>
    <Copyright>Copyright Â© Michael Monsour 2022</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Description>Transport for Rebus that doesn't actually send/receive anything at all. Kind-of like /dev/null in Linux. Useful for scenarios where you're forced to inject a Rebus instance but don't care about the functionality using it at all.</Description>
    <PackageTags>rebus transport empty mock</PackageTags>
    <PackageProjectUrl>https://github.com/lethek/Rebus.NullTransport</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/lethek/Rebus.NullTransport</RepositoryUrl>
    <RootNamespace>Rebus.NullTransport</RootNamespace>
    <CheckEolTargetFramework>false</CheckEolTargetFramework>
    <IsPackable>true</IsPackable>
  </PropertyGroup>

  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All"/>
    <PackageReference Include="Rebus" Version="[6.0.0,)" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Rebus.NullTransport.Tests" />
  </ItemGroup>

</Project>
